/**
 * @module ompimon
 * @submodule ompimon-protocol
 */
var
    util = require("util"),
    _ = require("underscore"),
    eventEmitter = require("events").EventEmitter


    ;


module.exports = Application;

/**
 * @class Application
 * @namespace Ompimon.Protocol
 * @extends EventEmitter
 * @constructor
 * @param id {Integer}
 */
function Application(id) {
    eventEmitter.call(this);
    this.init(id);
}

util.inherits(Application, eventEmitter);

_.extend(Application.prototype, {
    /**
     * Array with all connected clients for this app
     * @property clients
     * @â€ ype Array
     */
    clients: [],

    /**
     * @property id
     * @type Integer
     */
    id: null,


    /**
     * Counter functions
     * @property counterFunctions
     * @type Array
     */
    counterFunctions: [],

    /**
     * Cluster send functions
     * @property sendFunctions
     * @type Array
     */
    sendFunctions: [],


    init: function (id) {
        this.id = id;
    },

    /**
     * add new client to app
     * @param client {Ompimon.Cluster.Client}
     * @param ranks {Array}
     */
    addClient: function (client, ranks) {

    }



});