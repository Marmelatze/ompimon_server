var
    Application = require("../Application"),
    Monitor = require("ompimon-monitor")
    ;

global.config = {
    monitor: false,
    log: false
};
global.monitor = new Monitor('nodeunit', process.pid);

module.exports = {
    testHandleRequest: function(test) {
        var app = new Application(0);
        app.handleDataRequest({
            type: 'listen',
            sendId: null,
            rank: null
        });
        test.deepEqual(app.listeners, ['all']);
        test.deepEqual(app.rankListeners, {});

        app.handleDataRequest({
            type: 'stop',
            sendId: null,
            rank: null
        });

        test.deepEqual(app.listeners, []);
        test.deepEqual(app.rankListeners, {});

        test.done();
    },

    testHandleRequest2: function(test) {
        var app = new Application(0);
        app.handleDataRequest({
            type: 'listen',
            sendId: null,
            rank: 0
        });
        test.deepEqual(app.listeners, []);
        test.deepEqual(app.rankListeners, {0: ['all']});

        app.handleDataRequest({
            type: 'stop',
            sendId: null,
            rank: 0
        });

        test.deepEqual(app.listeners, []);
        test.deepEqual(app.rankListeners, {0: []});

        test.done();
    },
    testHandleRequest3: function(test) {
        var app = new Application(0);
        app.handleDataRequest({
            type: 'listen',
            sendId: null,
            rank: 0
        });
        app.handleDataRequest({
            type: 'listen',
            sendId: 1,
            rank: 1
        });
        app.handleDataRequest({
            type: 'listen',
            sendId: 2,
            rank: 1
        });
        app.handleDataRequest({
            type: 'listen',
            sendId: null,
            rank: 1
        });
        test.deepEqual(app.listeners, []);
        test.deepEqual(app.rankListeners, {
            0: ['all'],
            1: [1, 2, 'all']
        });

        app.handleDataRequest({
            type: 'stop',
            sendId: null,
            rank: 0
        });
        app.handleDataRequest({
            type: 'stop',
            sendId: 1,
            rank: 1
        });

        test.deepEqual(app.listeners, []);
        test.deepEqual(app.rankListeners, {
            0: [],
            1: [2, 'all']
        });

        test.done();
    }
};