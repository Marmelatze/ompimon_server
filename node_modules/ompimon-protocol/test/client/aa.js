var
    BufferBuilder = require("buffer-builder"),
    _ = require("underscore"),
    binary = require("binary"),
    Int64 = require('node-int64'),
    net = require("net"),
    async = require("async"),

    auth = require("ompimon-auth").auth,
    cluster = require('ompimon-cluster'),
    Storage = require("ompimon-storage"),
    Monitor = require("ompimon-monitor"),

    protocol = require("../../"),
    protoInit = require('../../cluster_actions/Init'),
    protoData = require("../../cluster_actions/Data"),
    Parser = require("../../parser"),

    stub = require("../../test-stub")
    ;

global.config = {
    monitor: false
};

auth.type = "test";

var client = cluster.client;

var socket = new net.Socket();
socket.write = function (message) {
};

client = new client(socket);
client.id = "Init";

var action = new protoInit();

var Protocol = new protocol();

module.exports = {


    testProcess: function (test) {
        global.monitor = new Monitor('nodeunit', process.pid);

        Storage.clearAllData(function() {
            var data = stub.initData;

            async.series([
                function (callback) {
                    action.process(client, data, function (result) {
                        test.deepEqual(client.ranks, data.ranks);
                        test.deepEqual(client.app.counterFunctions, data.counters);
                        test.deepEqual(client.app.sendFunctions, data.sends);
                        callback(null);
                    });
                },
                function (callback) {
                    var data = new protoData();
                    /*data.process(client, stub.sendData, function (result) {
                        callback();
                    });*/
                    callback(null);
                }

            ], function (err, result) {
                test.done();
            })

        });


    }
};
