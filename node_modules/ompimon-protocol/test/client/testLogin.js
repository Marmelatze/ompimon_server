var
    BufferBuilder = require("buffer-builder"),
    _ = require("underscore"),
    binary = require("binary"),
    Int64 = require('node-int64'),

    Client = require("ompimon-client/client"),

    Protocol = require("../.."),
    auth = require("ompimon-auth").auth,
    Parser = require("../../parser"),
    stub = require("../../test-client-stub"),

    action = require("../../client_actions/Login")

    ;
auth.type = "test";

var Action = new action;

var client = new Client('1', new Buffer(256));

module.exports = {
    testParse: function(test) {
        var data = stub.buildLogin(stub.loginData);
        var parser = new Parser(data);

        var result = Action.parse(client, parser);

        test.deepEqual(stub.loginData, result);
        test.done();
    },

    testProcess: function (test) {
        var data = stub.buildLogin(stub.loginData);
        var parser = new Parser(data);

        var result = Action.parse(client, parser);
        test.equals(client.authenticated, false);

        Action.once('send', function (client, result) {
            test.equals(client.authenticated, true);
            test.equals(result.status, 0, "Login failed");
            test.done();
        });
        Action.process(client, result);
    },

    testAll: function (test) {
        var protocol = new Protocol();
        var data = stub.buildLogin(stub.loginData);
        var buffer = new BufferBuilder();
        buffer.appendUInt8(0x01); // login
        buffer.appendBuffer(data);

        protocol.once('send', function (client, message) {
            var parser = new Parser(message);
            test.equals(parser.readUInt8(), 0x01); // action id
            test.equals(parser.readUInt8(), 0x00); // ok
            test.done();
        });

        protocol.parseClient(client, buffer.get());
    }
};