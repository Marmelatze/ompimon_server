var
    BufferBuilder = require("buffer-builder"),
    _ = require("underscore"),
    binary = require("binary"),
    Int64 = require('node-int64'),

    Client = require("ompimon-client/client"),
    Redis = require("redis"),


    Storage = require("ompimon-storage"),

    Protocol = require("../.."),
    auth = require("ompimon-auth").auth,
    Parser = require("../../parser"),
    stub = require("../../test-client-stub"),

    action = require("../../client_actions/abort")

    ;
auth.type = "test";


var Action = new action;

var client = new Client('1', new Buffer(256));

module.exports = {
    testParse: function(test) {
        var data = stub.buildAbort(stub.abortData);
        var parser = new Parser(data);

        var result = Action.parse(client, parser);

        test.deepEqual(stub.abortData, result);
        test.done();
    },

    testProcess: function (test) {
        var redisClient = Redis.createClient();

        var data = stub.buildAbort(stub.abortData);
        var parser = new Parser(data);
        var result = Action.parse(client, parser);

        redisClient.subscribe('cluster:app:' + stub.abortData.appId + ":abort");
        console.log("subscribe");

        redisClient.on('message', function (channel, message) {
            var client2 = Redis.createClient();
            var data = JSON.stringify({
                action: 'abort',
                status: 'ok'
            });
            client2.publish('client:app:'+stub.abortData.appId+":abort", data);
            client2.quit();
            redisClient.quit();
        });

        Action.once('send', function (client, result) {
            test.equals(result.status, 0, "Abort failed");
            test.done();
        });
        Action.process(client, result);
    }
};