var
    BufferBuilder = require("buffer-builder"),
    _ = require("underscore"),
    binary = require("binary"),
    Int64 = require('node-int64'),

    Client = require("ompimon-client/client"),


    Storage = require("ompimon-storage"),

    Protocol = require("../.."),
    auth = require("ompimon-auth").auth,
    Parser = require("../../parser"),
    stub = require("../../test-client-stub"),

    action = require("../../client_actions/abort")

    ;
auth.type = "test";

var Action = new action;

var client = new Client('1', new Buffer(256));

module.exports = {
    testParse: function(test) {
        var data = stub.buildAbort(stub.abortData);
        var parser = new Parser(data);

        var result = Action.parse(client, parser);

        test.deepEqual(stub.abortData, result);
        test.done();
    },

    testProcess: function (test) {
        var redis = Storage.getConnection();
        var data = stub.buildAbort(stub.abortData);
        var parser = new Parser(data);

        var result = Action.parse(client, parser);

        redis.subscribe('client:app:' + stub.abortData.appId + ':abort');
        redis.on('message', function (channel, message) {
            console.log(channel);
        });

        Action.once('send', function (client, result) {
            test.equals(result.status, 0, "Abort failed");
            test.done();
        });
        Action.process(client, result);
    }
};