var protocol = require("../"),
    auth = require("ompimon-auth").auth,
    BufferBuilder = require("buffer-builder"),
    binary = require("binary"),
    protoInit = require('../actions/init'),
    cluster = require('ompimon-cluster')
    ;

var client = cluster.client;

var client = new client.client(new Buffer(256));
client.id = "1234567890yyyasdfasdfasdfasdfasd";

var action = new protoInit.Action;

var app = "Meine Test Applikation";
var username = "TestUser";
var nodes = 10000;
var processes = 1235374;

function build() {
    var buffer = new BufferBuilder();

    buffer.appendUInt8(app.length);
    buffer.appendString(app);
    buffer.appendUInt8(username.length);
    buffer.appendString(username);
    buffer.appendUInt32BE(processes);
    buffer.appendUInt32BE(nodes);

    return buffer;
}

// test parsing
exports.testParse = function(test) {
    var buffer = build();

    var result = action.parseFromCluster(buffer.get());
    test.deepEqual(result, {
        app: app,
        username: username,
        nodes: nodes,
        processes: processes
    });
    test.done();
}




exports.testProcess = function(test) {
    var data = action.parseFromCluster(build().get());

    var result = action.processFromCluster(client, data, function(result) {
        var vars = binary.parse(result)
            .word8('actionId')
            .word8('result')
            .vars
        ;
        test.equal(vars.actionId, 0x00);
        test.equal(vars.result, 0);
        test.done();
    });
};

