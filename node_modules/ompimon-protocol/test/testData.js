var
    BufferBuilder = require("buffer-builder"),
    _ = require("underscore"),
    binary = require("binary"),
    Int64 = require('node-int64'),

    cluster = require('ompimon-cluster'),
    protocol = require("../"),
    protoData = require('../actions/data')

    ;


var client = cluster.client;

client = new client.client(new Buffer(256));
client.id = "1234567890yyyasdfasdfasdfasdfasd";
client.counterFunctions = 2;
client.ranks = 2;

var action = new protoData();


var data = [
    {
        rank: 1,
        counters: [
            123123, 4234234
        ],
        data: [
            {
                rank: 2,
                counter: new Int64(12344),
                size: new Int64(237373)
            },
            {
                rank: 3,
                counter: new Int64(123123),
                size: new Int64(2020203)
            }
        ]
    },
    {
        rank: 2,
        counters: [
            595959, 202340234
        ],
        data: [
            {
                rank: 1,
                counter: new Int64(123123855),
                size: new Int64(2034)
            }
        ]
    }
];


function build(data) {
    var buffer = new BufferBuilder();
    // processes
    data.forEach(function(dataEntry) {
        // counters
        dataEntry.counters.forEach(function(counter) {
            buffer.appendUInt32BE(counter);
        });

        // data
        buffer.appendUInt32BE(dataEntry.data.length);
        dataEntry.data.forEach(function(dataSet) {
            // rank id
            buffer.appendUInt32BE(dataSet.rank);
            // counter
            buffer.appendBuffer(dataSet.counter.buffer);
            // size
            buffer.appendBuffer(dataSet.size.buffer);
        });
    });

    return buffer;
}


module.exports = {
    testParse: function(test) {

        var result = action.parse(client, build(data).get());

        test.deepEqual(result, data);

        test.done();
    }
};
