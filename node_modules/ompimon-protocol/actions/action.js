var eventEmitter = require('events').EventEmitter
;


exports.Action = Action;

function Action () {
    eventEmitter.call(this);
}

// inherit events.EventEmitter
Action.super_ = eventEmitter;
Action.prototype = Object.create(eventEmitter.prototype, {
    constructor: {
        value: Action,
        enumerable: false
    }
});

Action.prototype = {
    parseFromCluster: function(buf) {
        throw new Error("parseFromCluster not implemented");
    },
    processFromCluster: function(client, data, callback) {
        throw new Error("processFromCluster not implemented");
    },
    processFromClient: function(socket, data, callback) {
        throw new Error("processFromClient not implemented");
    }
}
