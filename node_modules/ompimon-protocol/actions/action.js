var eventEmitter = require('events').EventEmitter,
    util = require("util")
;


exports.Action = Action;

function Action () {
    eventEmitter.call(this);
}

util.inherits(Action, eventEmitter);

// inherit events.EventEmitter
Action.super_ = eventEmitter;
Action.prototype = Object.create(eventEmitter.prototype, {
    constructor: {
        value: Action,
        enumerable: false
    }
});

Action.prototype.parse = function(buf) {
    throw new Error("parseFromCluster not implemented");
};

Action.prototype.process = function(client, data, callback) {
    throw new Error("processFromCluster not implemented");
}
