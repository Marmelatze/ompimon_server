var
    _ = require("underscore"),
    util = require("util"),

    action = require("./action"),
    Parser = require("../parser")

    ;


module.exports = Data;

function Data() {
    action.call(this);
}

util.inherits(Data, action);


_.extend(Data.prototype, {
    parse: function (client, buf) {
        var result = [];
        var parser = new Parser(buf);
        for (var i = 0; i < client.ranks; i++) {
            result.push(this._parseRank(client, parser, i + 1));
        }

        return result;
    },

    _parseRank: function (client, parser, rank) {
        return {
            rank: rank,
            counters: this._parseCounters(client, parser),
            data: this._parseData(parser)
        };
    },

    _parseCounters: function (client, parser) {
        var counters = [];
        for (var i = 0; i < client.counterFunctions; i++) {
            counters.push(parser.readUInt32());
        }

        return counters;
    },
    _parseData: function (parser) {
        var data = [];
        var len = parser.readUInt32();
        for (var i = 0; i < len; i++) {
            data.push(this._parseDataItem(parser));
        }

        return data;
    },
    _parseDataItem: function (parser) {
        return {
            rank: parser.readUInt32(),
            counter: parser.readUInt64(),
            size: parser.readUInt64()
        }
    }


});