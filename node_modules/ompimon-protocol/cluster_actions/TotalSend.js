/**
 * @module ompimon
 * @submodule ompimon-protocol
 */

var
    util = require("util"),
    _ = require("underscore"),
    binary = require("binary"),
    BufferBuilder = require('buffer-builder'),
    Storage = require("ompimon-storage"),

    auth = require('ompimon-auth').auth,

    action = require("./Action"),
    Parser = require("../parser"),
    response = require("../response"),
    globals = require("../globals")
    ;


module.exports = TotalSend;

/**
 * @class TotalSend
 * @namespace Ompimon.Protocol.Action
 * @extends Ompimon.Protocol.Action.Action
 * @constructor
 */
function TotalSend() {
    action.call(this);
}

util.inherits(TotalSend, action);

_.extend(TotalSend.prototype, {
    /**
     * Parse data send by cluster.
     * Will return something like:

     {

     }

     * @method parse
     * @param client {Ompimon.Cluster.Client}
     * @param parser {Ompimon.Protocol.Parser}
     * @return {Object}
     */
    parse: function(client, parser) {
        var result = {
            sendId: parser.readUInt8(),
            data: this._parseData(parser, client.ranks)
        };
        console.log(result);

        return result;
    },

    _parseData: function(parser, ranks) {

    },

    process: function(client, data, callback) {
        // TODO
    }

});