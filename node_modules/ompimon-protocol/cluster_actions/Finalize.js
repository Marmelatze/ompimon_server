/**
 * @module ompimon
 * @submodule ompimon-protocol
 */
var
    binary = require("binary"),
    BufferBuilder = require('buffer-builder'),
    _ = require("underscore"),
    util = require("util"),
    Storage = require("ompimon-storage"),

    action = require("./Action")
;

module.exports = Finalize;

/**
 * Finalize current application.
 * Will be handled by {{#crossLink "Ompimon.Protocol.Application/finalize:method"}}{{/crossLink}}
 *
 * @class Finalize
 * @namespace Ompimon.Protocol.ClusterAction
 * @extends Ompimon.Protocol.ClusterAction.Action
 * @constructor
 */
function Finalize() {
    action.call(this);
}


util.inherits(Finalize, action);

_.extend(Finalize.prototype, {
    parse: function(client, parser) {
        // Empty message
    },

    /**
     * Finalizes the current app
     *
     * @method process
     * @param client {Ompimon.Cluster.Client}
     * @param data {Object}
     * @param callback {Function}
     */
    process: function(client, data, callback) {
        client.app.finalize();
        var result = new BufferBuilder();
        result.appendUInt8(0x00); // all ok

        callback(result.get());
    }
});