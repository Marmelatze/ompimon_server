/**
 * @module ompimon
 * @submodule ompimon-protocol
 */

var
    util = require("util"),
    _ = require("underscore"),
    auth = require('ompimon-auth').auth,


    parser = require("../parser"),
    response = require("../response"),


    action = require("./Action")
    ;

module.exports = Sleep;

/**
 * Dummy action. Stops receiving realtime data.
 *
 * @class Sleep
 * @namespace Ompimon.Protocol.ClientAction
 * @extends Ompimon.Protocol.ClientAction.Action
 * @constructor
 */
function Sleep() {
    action.call(this);
}

util.inherits(Sleep, action);

_.extend(Sleep.prototype, {
    /**
     * Parse a message
     * Will return something like:

     {
     }

     * @method parse
     * @param client {Ompimon.Client.Client}
     * @param parser {Ompimon.Protocol.Parser}
     */
    parse: function (client, parser) {
        return {};
    },


    /**
     * processes parsed data
     * @method process
     * @param client {Ompimon.Client.Client}
     * @param data {Object}
     */
    process: function (client, data) {
        // do nothing
    }

});