/**
 * @module ompimon
 * @submodule ompimon-protocol
 */

var
    util = require("util"),
    _ = require("underscore"),
    auth = require('ompimon-auth').auth,


    parser = require("../parser"),
    response = require("../response"),


    action = require("./Action")
    ;

module.exports = AppDetail;

/**
 * @class Counter
 * @namespace Ompimon.Protocol.ClientAction
 * @extends Ompimon.Protocol.ClientAction.Action
 * @constructor
 */
function AppDetail() {
    action.call(this);
}

util.inherits(AppDetail, action);

_.extend(AppDetail.prototype, {
    /**
     * Parse a message
     * Will return something like:

     {
        appId: 123
     }

     * @method parse
     * @param client {Websocket}
     * @param parser {Ompimon.Protocol.Parser}
     */
    parse: function (client, parser) {
        return {
            appId: parser.readUInt32(parser.readUInt8())
        }
    },


    /**
     * processes parsed data
     * @param client {Websocket}
     * @param data {Object}
     */
    process: function (client, data) {
        // TODO implement @Flo
    }

});