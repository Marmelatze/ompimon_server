var eventEmitter = require('events').EventEmitter,
    util = require('util'),
    response = require("./response"),
    _ = require('underscore')
;

var actions = [
    'auth'
];

exports.protocol = Protocol;


function Protocol() {
    eventEmitter.call(this);
    var self = this;
    this.actions = {};
    _.each(actions, function(action) {
        var actionClass = new (require("./actions/" + action).Action);
        this.actions[action] = actionClass;
        actionClass.on('send', function(socket, response) {
            self.emit('send', socket, response);
        });

    }, this);
}


util.inherits(Protocol, eventEmitter);


Protocol.prototype.handle = function(socket, data) {
    var action = data.action;
    console.log(action);
    if (!this.actions[action]) {
        this.emit('send', socket, new response.InvalidResponse(action));

        return;
    }

    this.actions[action].process(socket, data);
};