var net = require('net'),
    BufferBuilder = require('buffer-builder'),
    protocolStub = require("ompimon-protocol/test-stub")

;




var client = net.connect({port: 8214},function() {
    this.token = '';
    console.log('client connected');

    var data = protocolStub.buildInit(protocolStub.initData).get();
    var buffer = new BufferBuilder();
    buffer.appendUInt8(0x01);
    buffer.appendBuffer(data);
    buffer = buffer.get();

    client.write(buffer);

});

var iterations = 1000000;

var receiveCount = 0;
client.on('data', function(data) {
//    console.log("received:", data);

    if (data.readUInt8(0) == 0x01) {
        console.log("send");
        send();
    } else {
        receiveCount+=data.lenth;
        if (receiveCount/2 == iterations) {
            console.log("finished");
        }
    }

});


client.on('end', function() {
    console.log('client disconnected');
});

function send() {
    var data = protocolStub.buildSend(protocolStub.sendData).get();
    var buffer = new BufferBuilder();
    buffer.appendUInt8(0x02);
    buffer.appendBuffer(data);
    buffer = buffer.get();

    console.log("size: " + buffer.length + "byte");

    var size = iterations * buffer.length;
    var start = new Date();
    for (var i = 0; i < iterations; i++) {
        client.write(buffer);
    }
    size = size / 1024/1024;
    var end = new Date();
    var diff = (end - start)/1000;
    console.log("took " + diff + "s");
    console.log("parsed "+ (size/diff)+"MB/s");

}