var
    _ = require("underscore"),
    util = require("util"),
    color = require("bash-color"),
    Storage = require("ompimon-storage")
;

module.exports = Monitor;

function Monitor(type, name)
{
    this.init.apply(this, arguments);
}

_.extend(Monitor.prototype, {
    init: function (type, name) {
        if (!config.monitor) {
            return;
        }
        this.type = type;
        this.name = name;
        this.redis = Storage.createConnection();

        this.log("started");
        this.addComponent(type, name);
    },

    getId: function() {
        return this.type+":"+this.name;
    },

    message: function(from, to, message, payload) {
        if (!config.monitor) {
            return;
        }
        if ('me' == from) {
            from = this.getId();
        }
        if ('me' == to) {
            to = this.getId();
        }
        this.log("from " + from + " to "+to+":" + message);
        this.redis.publish('monitor', JSON.stringify({
            type: 'message',
            data: {
                from: from,
                to: to,
                message: message,
                payload: payload
            }
        }));
    },

    addComponent: function(type, name) {
        if (!config.monitor) {
            return;
        }
        this.log("added " + type+":"+name);
        this.redis.publish('monitor', JSON.stringify({
            type: 'add',
            data: {
                type: type,
                name: name
            }
        }));
    },

    removeComponent: function(type, name) {
        if (!config.monitor) {
            return;
        }

        this.log("removed "+ type+":"+name);
        this.redis.publish('monitor', JSON.stringify({
            type: 'remove',
            data: {
                type: type,
                name: name
            }
        }));
    },

    log: function (message) {
        console.log(color.purple("[" + this.getId() + "]") + ": " + message);
    }
});